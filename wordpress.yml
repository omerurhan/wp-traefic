#wordpress with traefic application
version: "3.8"
services:
  wordpress:
    image: wordpress:latest
    depends_on:
      - db
    deploy:
      replicas: 5
      labels:
         #change omer.com your domain address.
        - "traefik.http.routers.my-router.rule=Host(`omer.com`)"
        - "traefik.http.services.wordpress.loadbalancer.server.port=80"
        - "traefik.http.services.wordpress.loadbalancer.sticky=true"
        - "traefik.http.services.wordpress.loadbalancer.sticky.cookie.name=wp-elif"
        - "traefik.http.services.wordpress.loadbalancer.healthcheck.port=80"
        - "traefik.enable=true"
        - "traefik.docker.network=docker-apps"
        - "traefik.http.routers.my-router.entrypoints=web"
        #- "traefik.backend.loadbalancer.method=drr"

    environment:
      - WORDPRESS_DB_NAME=wordpress
      - WORDPRESS_DB_USER=test
      - WORDPRESS_DB_PASSWORD=new
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_TABLE_PREFIX=blabla
    networks:
      docker-apps:

  db:
    image: mysql:5
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
    environment:
      - MYSQL_ROOT_PASSWORD=root_pass
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
      - MYSQL_USER=username
      - MYSQL_PASSWORD=user_pass
      - MYSQL_DATABASE=wordpress
    volumes:
    # use your local disc for mount database file.
      - /mnt/docker-swarm/mysql:/var/lib/mysql
    networks:
      docker-apps:
        #Static IP example.
        ipv4_address: 10.0.5.5
      

#Create
  loadbalancer:
    image: traefik
    #command:
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/centos/swarm-file/config.yml:/etc/traefik/traefik.yml
    deploy:
      restart_policy:
        condition: any
      mode: replicated
      replicas: 1
      update_config:
        delay: 2s
      # place containers manager node.
      placement:
        constraints:
          - "node.role == manager"
    networks:
      docker-apps:

    
#create overlay network for this application.
networks:
  docker-apps:
    driver: overlay
    ipam:
      driver: default
      config:
        - subnet: 10.0.5.0/24


